//file:noinspection GroovyAssignabilityCheck
plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

version = rootProject.version + "-quilt"

architectury {
    platformSetupLoomIde()
    loader("quilt")
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentQuilt.extendsFrom common
}

repositories {
    maven {
        url = "https://maven.terraformersmc.com"
        content { includeGroup "com.terraformersmc" }
    }
}

dependencies {
    modImplementation "org.quiltmc:quilt-loader:${rootProject.quilt_version}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${rootProject.qapi_version}"

    //modRuntimeOnly "maven.modrinth:lazydfu:0.1.2"
    modImplementation("com.terraformersmc:modmenu:3.2.0") {
        exclude group: "net.fabricmc"; exclude group: "net.fabricmc.fabric-api"
    }

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionQuilt")) { transitive false }
}

processResources {
    inputs.property "group", rootProject.maven_group
    inputs.property "version", project.version

    filesMatching("quilt.mod.json") {
        expand "group": rootProject.maven_group, "version": project.version
    }
}


shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
